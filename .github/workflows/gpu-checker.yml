name: Cloud GPU Capacity Checker

on:
  schedule:
    - cron: '0 13 * * *'  # Run every day at 1:00 PM UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  run-capacity-checker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -c "import sys; print('Python executable:', sys.executable); print('Python version:', sys.version)"
        pip list
    
    - name: Set up GCP credentials
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        export_environment_variables: true
    
    - name: Create .env file
      run: |
        cat > .env << 'EOL'
        AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}
        GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
        MYSQL_HOST=${{ secrets.MYSQL_HOST }}
        MYSQL_PORT=${{ secrets.MYSQL_PORT }}
        MYSQL_USER=${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
        MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
        DB_API_URL=${{ secrets.DB_API_URL }}
        DB_API_KEY=${{ secrets.DB_API_KEY }}
        DEBUG=True
        EOL
        echo "Created .env file with required variables"
    
    - name: Verify database connection
      env:
        MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
        MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      run: |
        echo "import mysql.connector
        import os

        # Use environment variables directly
        db_config = {
            'host': os.environ['MYSQL_HOST'],
            'port': int(os.environ['MYSQL_PORT']),
            'user': os.environ['MYSQL_USER'],
            'password': os.environ['MYSQL_PASSWORD'],
            'database': os.environ['MYSQL_DATABASE'],
            'connect_timeout': 60
        }

        print(f\"Connecting to {db_config['host']}:{db_config['port']}...\")
        try:
            conn = mysql.connector.connect(**db_config)
            print('Connection successful!')
            cursor = conn.cursor()
            cursor.execute('SHOW TABLES')
            tables = cursor.fetchall()
            print('Available tables:')
            for table in tables:
                print(f'- {table[0]}')
            cursor.close()
            conn.close()
        except Exception as e:
            print(f'Connection error: {e}')
            exit(1)
        " > db_check.py
        
        # Execute the script
        python db_check.py
      
    - name: Run AWS capacity checker
      run: |
        echo "Running AWS capacity checker..."
        python checkers/aws_capacity_checker.py
        echo "AWS script exit code: $?"
      continue-on-error: true
      
    - name: Run Azure capacity checker
      run: |
        echo "Running Azure capacity checker..."
        python checkers/azure_capacity_checker.py
        echo "Azure script exit code: $?"
      continue-on-error: true
      
    - name: Run GCP capacity checker
      run: |
        echo "Running GCP capacity checker..."
        python checkers/gcp_capacity_checker.py
        echo "GCP script exit code: $?"
      continue-on-error: true
      
    - name: Report completion
      if: always()
      run: |
        echo "GPU Checker job completed at $(date)"