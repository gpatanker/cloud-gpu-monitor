name: Cloud GPU Capacity Checker

on:
  schedule:
    - cron: '0 13 * * *'  # Run every day at 1:00 PM UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  run-capacity-checker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-dotenv
        pip list
    
    - name: Verify database connection
      run: |
        python3 -c "
        import os
        import requests
        
        # Database connection test
        db_api_url = '${{ secrets.DB_API_URL }}'
        db_api_key = '${{ secrets.DB_API_KEY }}'
        
        print('Attempting Database Connection:')
        print(f'API Endpoint: {db_api_url}')
        
        response = requests.post(
            db_api_url,
            headers={'x-api-key': db_api_key},
            json={'operation': 'verify_database'}
        )
        
        print('Response Details:')
        print(f'Status Code: {response.status_code}')
        print('Response Headers:')
        for header, value in response.headers.items():
            print(f'{header}: {value}')
        
        print('\nResponse Body:')
        try:
            result = response.json()
            print(result)
        except ValueError:
            print('Response is not JSON:')
            print(response.text)
        
        # Raise an exception if the request was not successful
        response.raise_for_status()
        "
      
    - name: Create .env file
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > .env
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
        echo "AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> .env
        echo "AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> .env
        echo "AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> .env
        echo "AZURE_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> .env
        echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> .env
        echo "DB_API_URL=${{ secrets.DB_API_URL }}" >> .env
        echo "DB_API_KEY=${{ secrets.DB_API_KEY }}" >> .env
        echo "DEBUG=True" >> .env
    
    - name: Set up GCP credentials
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        export_environment_variables: true
    
    - name: Run AWS capacity checker
      run: |
        echo "Running AWS capacity checker..."
        python checkers/aws_capacity_checker.py
        echo "AWS script exit code: $?"
      continue-on-error: true
      
    - name: Run Azure capacity checker
      run: |
        echo "Running Azure capacity checker..."
        python checkers/azure_capacity_checker.py
        echo "Azure script exit code: $?"
      continue-on-error: true
      
    - name: Run GCP capacity checker
      run: |
        echo "Running GCP capacity checker..."
        python checkers/gcp_capacity_checker.py
        echo "GCP script exit code: $?"
      continue-on-error: true
      
    - name: Report completion
      if: always()
      run: |
        echo "GPU Checker job completed at $(date)"